
@model IEnumerable<OnlineShop.Web.Models.ProductViewModel>
@*@model PagedList.IPagedList<OnlineShop.Web.Models.ProductViewModel>
@using PagedList.Mvc;*@

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

@*@model PagedList.IPagedList<MvcStory.Models.Story>*@

@*http://blogs.msmvps.com/marafa/2014/06/13/how-to-create-asp-net-mvc-authentication-tables-in-an-existing-database/
<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
<br />
<div class="row">
    @using (Html.BeginForm("ViewAllProducts", "Home", FormMethod.Get))
    {
        <div class="col-lg-6">
            <div class="input-group">
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit"><span class="glyphicon glyphicon-glass" aria-hidden="true" id="glass"></span>Go!</button>
                </span>
                <input type="text" name="SearchString" class="form-control" placeholder="Search for game...">
            </div>
        </div>
    }

    <div id="data" class="col-lg-6">
        <p>
            @Ajax.ActionLink("View your cart", "ViewCart", new AjaxOptions()
        {
            HttpMethod = "GET",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "data"
        })
        </p>
        <div id=""></div>
    </div>
</div><br />

<table class="table">
    <tr>
        <th>
           
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Image)
        </th>
        <th>
            @Html.DisplayNameFor(model=>model.Rating)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        @*<th>
                        @Html.DisplayNameFor(model => model.Quanty)
                    </th>*@
        <th>
            Count
        </th>
        <th>
            Add to cart
        </th>
    </tr>

    @foreach (var item in Model)
    {
        using (Html.BeginForm("AddToCart", "Home", new { id = item.Id }))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <img src="@Url.Content(item.Image)" alt="Image" />
                </td>
                <td>
                    @for (var i = 0; i < item.Rating; i++)
                    {

                        <div class="glyphicon glyphicon-star"></div>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                @*<td>
                                @Html.DisplayFor(modelItem => item.Quanty)
                            </td>*@
                <td>
                    <input type="number" name="count" value=" " />
                </td>
                <td>
                    <input type="submit" name="submit" value="Add to cart" id="btn" class="btn btn-default" />
                </td>
                @*<td>
                                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
                            </td>*@
            </tr>
        }
    }

</table>
<br />
@*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ViewAllProducts",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@
        <script>
            //$(document).ready(function () {

            //    $("#btn").click(function() {
            //        $.ajax({
            //            url: 'Home/AddToCart',
            //            type: 'POST',
            //            data: {id:item.Id, count:$('input[type=number]').val()},
            //            success: function(data) {
            //                $('#data').html(data);
            //            },
            //            error: function(err) {
            //                alert(JSON.stringify(err));
            //            }
            //        });
            //    });
            //})
        </script>
